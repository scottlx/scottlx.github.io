<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>raft on windseek的博客</title><link>https://scottlx.github.io/tags/raft/</link><description>Recent content in raft on windseek的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 28 Oct 2022 09:30:00 +0800</lastBuildDate><atom:link href="https://scottlx.github.io/tags/raft/index.xml" rel="self" type="application/rss+xml"/><item><title>raft选举流程</title><link>https://scottlx.github.io/posts/raft%E9%80%89%E4%B8%BE%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 28 Oct 2022 09:30:00 +0800</pubDate><guid>https://scottlx.github.io/posts/raft%E9%80%89%E4%B8%BE%E6%B5%81%E7%A8%8B/</guid><description>图解 Raft (thesecretlivesofdata.com) 算法目的：实现了分布式节点的数据一致性 节点有三个状态：follower，candidate，leader leader election 初始阶段所有节点处于follower状态 follower状态下节点存在一个election timeout（150ms—300ms之间的随机数，随机降低了多个节点同时</description></item></channel></rss>