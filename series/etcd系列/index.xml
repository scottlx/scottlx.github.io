<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>etcd系列 on windseek的博客</title><link>https://scottlx.github.io/series/etcd%E7%B3%BB%E5%88%97/</link><description>Recent content in etcd系列 on windseek的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 28 Oct 2022 09:30:00 +0800</lastBuildDate><atom:link href="https://scottlx.github.io/series/etcd%E7%B3%BB%E5%88%97/index.xml" rel="self" type="application/rss+xml"/><item><title>raft选举流程</title><link>https://scottlx.github.io/posts/raft%E9%80%89%E4%B8%BE%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 28 Oct 2022 09:30:00 +0800</pubDate><guid>https://scottlx.github.io/posts/raft%E9%80%89%E4%B8%BE%E6%B5%81%E7%A8%8B/</guid><description>图解 Raft (thesecretlivesofdata.com) 算法目的：实现了分布式节点的数据一致性 节点有三个状态：follower，candidate，leader leader election 初始阶段所有节点处于follower状态 follower状态下节点存在一个election timeout（150ms—300ms之间的随机数，随机降低了多个节点同时</description></item><item><title>etcd client v3 连接流程</title><link>https://scottlx.github.io/posts/etcd-client-v3%E8%BF%9E%E6%8E%A5%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 28 Oct 2022 09:15:00 +0800</pubDate><guid>https://scottlx.github.io/posts/etcd-client-v3%E8%BF%9E%E6%8E%A5%E6%B5%81%E7%A8%8B/</guid><description>etcd client v3 连接流程 首先需要了解grpc框架的一些概念，这边引用网上的一张图 Resolver 提供一个用户自定义的解析、修改地址的方法，使得用户可以自己去实现地址解析的逻辑、做服务发现、地址更新等等功能。 将Endpoints里的ETCD服务器地址(127.0.0.1:2379这种格式)做一次转换传给g</description></item></channel></rss>