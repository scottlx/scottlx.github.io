<svg xmlns="http://www.w3.org/2000/svg" ed:vSpacing="30" ed:name="页面-1" ed:hSpacing="30" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" id="page300000100" width="2304" height="1799" viewBox="0 0 2304 1799" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st3 {fill:#000000;font-family:微软雅黑;font-size:10pt}
.st2 {fill:#303030;font-family:微软雅黑;font-size:14pt;font-weight:bold}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:18pt;font-weight:bold}
]]></style><defs/><rect y="0" x="0" width="2304" fill="#ffffff" height="1799"/><path stroke-width="2" transform="matrix(1,0,0,1,82.2,141.95)" id="103" stroke-linecap="round" fill="none" d="M-25.2,-27L-25.2,26.9L25.2,26.9" ed:parentid="101" ed:tosuperid="102" stroke="#454545" stroke-linejoin="round"/><path stroke-width="2" transform="matrix(1,0,0,1,82.2,213)" id="105" stroke-linecap="round" fill="none" d="M-25.2,-98L-25.2,98L25.2,98" ed:parentid="101" ed:tosuperid="104" stroke="#454545" stroke-linejoin="round"/><path stroke-width="2" transform="matrix(1,0,0,1,82.2,724.17)" id="107" stroke-linecap="round" fill="none" d="M-25.2,-609.2L-25.2,609.2L25.2,609.2" ed:parentid="101" ed:tosuperid="106" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,206.62)" id="109" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="102" ed:tosuperid="108" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,223.45)" id="111" stroke-linecap="round" fill="none" d="M-9.5,-33.6L-9.5,27.6C-9.5,31,-6.8,33.6,-3.5,33.6L9.5,33.6" ed:parentid="102" ed:tosuperid="110" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,357.92)" id="113" stroke-linecap="round" fill="none" d="M-9.5,-26L-9.5,20C-9.5,23.3,-6.8,26,-3.5,26L9.5,26" ed:parentid="104" ed:tosuperid="112" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,374.75)" id="122" stroke-linecap="round" fill="none" d="M-9.5,-42.9L-9.5,36.8C-9.5,40.2,-6.8,42.8,-3.5,42.8L9.5,42.8" ed:parentid="104" ed:tosuperid="121" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,434.42)" id="124" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="121" ed:tosuperid="123" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,636.05)" id="126" stroke-linecap="round" fill="none" d="M-9.5,-218.4L-9.5,212.4C-9.5,215.8,-6.8,218.4,-3.5,218.4L9.4,218.4" ed:parentid="121" ed:tosuperid="125" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,814.88)" id="128" stroke-linecap="round" fill="none" d="M-9.5,-397.3L-9.5,391.3C-9.5,394.6,-6.8,397.3,-3.5,397.3L9.4,397.3" ed:parentid="121" ed:tosuperid="127" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,831.7)" id="130" stroke-linecap="round" fill="none" d="M-9.5,-414.1L-9.5,408.1C-9.5,411.4,-6.8,414.1,-3.5,414.1L9.4,414.1" ed:parentid="121" ed:tosuperid="129" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,848.53)" id="132" stroke-linecap="round" fill="none" d="M-9.5,-430.9L-9.5,424.9C-9.5,428.2,-6.8,430.9,-3.5,430.9L9.4,430.9" ed:parentid="121" ed:tosuperid="131" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,449.1,854.5)" id="136" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="125" ed:tosuperid="135" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,619.7,692.5)" id="138" stroke-linecap="round" fill="none" d="M-13.5,162L0,162L0,-156C0,-159.3,2.7,-162,6,-162L13.5,-162" ed:parentid="135" ed:tosuperid="137" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,619.7,859.9)" id="140" stroke-linecap="round" fill="none" d="M0,-5.4L0,-0.6C0,2.7,2.7,5.4,6,5.4L13.5,5.4" ed:parentid="135" ed:tosuperid="139" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,619.7,1001.3)" id="142" stroke-linecap="round" fill="none" d="M0,-146.8L0,140.8C0,144.1,2.7,146.8,6,146.8L13.5,146.8" ed:parentid="135" ed:tosuperid="141" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,619.7,1016.5)" id="144" stroke-linecap="round" fill="none" d="M0,-162L0,156C0,159.3,2.7,162,6,162L13.5,162" ed:parentid="135" ed:tosuperid="143" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,734.3,507.7)" id="146" stroke-linecap="round" fill="none" d="M-13.5,22.8L0,22.8L0,-16.8C0,-20.1,2.7,-22.8,6,-22.8L13.5,-22.8" ed:parentid="137" ed:tosuperid="145" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,734.3,522.9)" id="148" stroke-linecap="round" fill="none" d="M0,7.6L0,-1.6C0,-4.9,2.7,-7.6,6,-7.6L13.5,-7.6" ed:parentid="137" ed:tosuperid="147" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,734.3,538.1)" id="150" stroke-linecap="round" fill="none" d="M0,-7.6L0,1.6C0,4.9,2.7,7.6,6,7.6L13.5,7.6" ed:parentid="137" ed:tosuperid="149" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1006.5,545.7)" id="152" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="149" ed:tosuperid="151" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1102.5,484.9)" id="154" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="145" ed:tosuperid="153" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1016.1,515.3)" id="156" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="147" ed:tosuperid="155" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,734.3,553.3)" id="158" stroke-linecap="round" fill="none" d="M0,-22.8L0,16.8C0,20.1,2.7,22.8,6,22.8L13.5,22.8" ed:parentid="137" ed:tosuperid="157" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,729.5,809.1)" id="160" stroke-linecap="round" fill="none" d="M0,56.2L0,-50.2C0,-53.5,2.7,-56.2,6,-56.2L13.5,-56.2" ed:parentid="139" ed:tosuperid="159" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1073.7,752.9)" id="162" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="159" ed:tosuperid="161" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,729.5,850.9)" id="164" stroke-linecap="round" fill="none" d="M0,14.4L0,-8.4C0,-11.7,2.7,-14.4,6,-14.4L13.5,-14.4" ed:parentid="139" ed:tosuperid="163" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1060.1,836.5)" id="166" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="163" ed:tosuperid="165" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,729.5,915.5)" id="168" stroke-linecap="round" fill="none" d="M0,-50.2L0,44.2C0,47.5,2.7,50.2,6,50.2L13.5,50.2" ed:parentid="139" ed:tosuperid="167" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,884.9,965.7)" id="170" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="167" ed:tosuperid="169" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,729.5,961.1)" id="172" stroke-linecap="round" fill="none" d="M0,-95.8L0,89.8C0,93.1,2.7,95.8,6,95.8L13.5,95.8" ed:parentid="139" ed:tosuperid="171" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,729.5,769.5)" id="174" stroke-linecap="round" fill="none" d="M-13.5,95.8L0,95.8L0,-89.8C0,-93.1,2.7,-95.8,6,-95.8L13.5,-95.8" ed:parentid="139" ed:tosuperid="173" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,992.9,673.7)" id="176" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="173" ed:tosuperid="175" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1228.3,649.3)" id="178" stroke-linecap="round" fill="none" d="M-13.5,24.4L0,24.4L0,-18.4C0,-21.7,2.7,-24.4,6,-24.4L13.5,-24.4" ed:parentid="175" ed:tosuperid="177" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1228.3,673.7)" id="180" stroke-linecap="round" fill="none" d="M0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="175" ed:tosuperid="179" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,1371.07)" id="182" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="106" ed:tosuperid="181" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,253.25,1438.38)" id="184" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="185" ed:tosuperid="183" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,199.35,1404.73)" id="186" stroke-linecap="round" fill="none" d="M-9.4,-16.8L-9.4,10.8C-9.4,14.1,-6.8,16.8,-3.4,16.8L9.5,16.8" ed:parentid="181" ed:tosuperid="185" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,253.25,1464.4)" id="188" stroke-linecap="round" fill="none" d="M-9.5,-42.8L-9.5,36.8C-9.5,40.2,-6.8,42.8,-3.5,42.8L9.4,42.8" ed:parentid="185" ed:tosuperid="187" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,1447.57)" id="190" stroke-linecap="round" fill="none" d="M-9.5,-93.3L-9.5,87.3C-9.5,90.6,-6.8,93.3,-3.5,93.3L9.5,93.3" ed:parentid="106" ed:tosuperid="189" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,1557.73)" id="192" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="189" ed:tosuperid="191" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,1481.23)" id="195" stroke-linecap="round" fill="none" d="M-9.5,-127L-9.5,121C-9.5,124.3,-6.8,127,-3.5,127L9.5,127" ed:parentid="106" ed:tosuperid="194" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,1625.03)" id="197" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.5,16.8" ed:parentid="194" ed:tosuperid="196" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,1641.85)" id="199" stroke-linecap="round" fill="none" d="M-9.5,-33.7L-9.5,27.7C-9.5,31,-6.8,33.7,-3.5,33.7L9.4,33.7" ed:parentid="194" ed:tosuperid="198" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,151.85,1531.7)" id="201" stroke-linecap="round" fill="none" d="M-9.5,-177.4L-9.5,171.5C-9.5,174.8,-6.8,177.5,-3.5,177.5L9.5,177.5" ed:parentid="106" ed:tosuperid="200" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,1725.98)" id="203" stroke-linecap="round" fill="none" d="M-9.5,-16.8L-9.5,10.8C-9.5,14.1,-6.8,16.8,-3.5,16.8L9.4,16.8" ed:parentid="200" ed:tosuperid="202" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,205.75,1742.8)" id="205" stroke-linecap="round" fill="none" d="M-9.5,-33.7L-9.5,27.7C-9.5,31,-6.8,33.7,-3.5,33.7L9.5,33.7" ed:parentid="200" ed:tosuperid="204" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1228.3,698.1)" id="207" stroke-linecap="round" fill="none" d="M0,-24.4L0,18.4C0,21.7,2.7,24.4,6,24.4L13.5,24.4" ed:parentid="175" ed:tosuperid="206" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1426.9,722.5)" id="209" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,-0,2.7,-0,6,-0L13.5,-0" ed:parentid="206" ed:tosuperid="208" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1347.5,752.9)" id="211" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="161" ed:tosuperid="210" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1283.5,809.9)" id="213" stroke-linecap="round" fill="none" d="M-13.5,26.6L0,26.6L0,-20.6C0,-23.9,2.7,-26.6,6,-26.6L13.5,-26.6" ed:parentid="165" ed:tosuperid="212" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1355.7,783.3)" id="215" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="212" ed:tosuperid="214" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1283.5,825.1)" id="217" stroke-linecap="round" fill="none" d="M0,11.4L0,-5.4C0,-8.7,2.7,-11.4,6,-11.4L13.5,-11.4" ed:parentid="165" ed:tosuperid="216" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1283.5,863.1)" id="219" stroke-linecap="round" fill="none" d="M0,-26.6L0,20.6C0,23.9,2.7,26.6,6,26.6L13.5,26.6" ed:parentid="165" ed:tosuperid="218" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1778.9,813.7)" id="221" stroke-linecap="round" fill="none" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" ed:parentid="216" ed:tosuperid="220" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1824.5,866.9)" id="223" stroke-linecap="round" fill="none" d="M-13.5,22.8L0,22.8L0,-16.8C0,-20.1,2.7,-22.8,6,-22.8L13.5,-22.8" ed:parentid="218" ed:tosuperid="222" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1824.5,882.1)" id="225" stroke-linecap="round" fill="none" d="M0,7.6L0,-1.6C0,-4.9,2.7,-7.6,6,-7.6L13.5,-7.6" ed:parentid="218" ed:tosuperid="224" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1824.5,897.3)" id="227" stroke-linecap="round" fill="none" d="M0,-7.6L0,1.6C0,4.9,2.7,7.6,6,7.6L13.5,7.6" ed:parentid="218" ed:tosuperid="226" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1824.5,912.5)" id="229" stroke-linecap="round" fill="none" d="M0,-22.8L0,16.8C0,20.1,2.7,22.8,6,22.8L13.5,22.8" ed:parentid="218" ed:tosuperid="228" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1125.7,1026.5)" id="231" stroke-linecap="round" fill="none" d="M-13.5,30.4L0,30.4L0,-24.4C0,-27.7,2.7,-30.4,6,-30.4L13.5,-30.4" ed:parentid="171" ed:tosuperid="230" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1125.7,1041.7)" id="233" stroke-linecap="round" fill="none" d="M0,15.2L0,-9.2C0,-12.5,2.7,-15.2,6,-15.2L13.5,-15.2" ed:parentid="171" ed:tosuperid="232" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1125.7,1056.9)" id="235" stroke-linecap="round" fill="none" d="M0,-0C0,0,2.7,0,6,0L13.5,0" ed:parentid="171" ed:tosuperid="234" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1125.7,1072.1)" id="237" stroke-linecap="round" fill="none" d="M0,-15.2L0,9.2C0,12.5,2.7,15.2,6,15.2L13.5,15.2" ed:parentid="171" ed:tosuperid="236" stroke="#454545" stroke-linejoin="round"/><path transform="matrix(1,0,0,1,1125.7,1087.3)" id="239" stroke-linecap="round" fill="none" d="M0,-30.4L0,24.4C0,27.7,2.7,30.4,6,30.4L13.5,30.4" ed:parentid="171" ed:tosuperid="238" stroke="#454545" stroke-linejoin="round"/><g transform="matrix(1,0,0,1,22,20)" ed:width="159" ed:height="95" id="101" ed:topictype="mainidea" ed:layout="righttree"><path stroke-width="2" fill="#173679" d="M4,0L155,0C157.7,0,159,1.3,159,4L159,91C159,93.7,157.7,95,155,95L4,95C1.3,95,0,93.7,0,91L0,4C0,1.3,1.3,0,4,0z" stroke="#173679" stroke-linejoin="round"/><text class="st1"><tspan textLength="117" y="40.15" x="20" style="white-space:pre">scheduler</tspan><tspan textLength="66" y="72.15" x="45" style="white-space:pre">v1.13</tspan></text></g><g transform="matrix(1,0,0,1,107.4,148)" ed:width="112.6" ed:height="41.8" id="102" ed:parentid="101"><path stroke-width="2" fill="#f9f9f9" d="M4,0L108.6,0C111.3,0,112.6,1.3,112.6,4L112.6,37.8C112.6,40.5,111.3,41.8,108.6,41.8L4,41.8C1.3,41.8,0,40.5,0,37.8L0,4C0,1.3,1.3,0,4,0z" stroke="#454545" stroke-linejoin="round"/><text class="st2"><tspan textLength="76" y="27.55" x="18" style="white-space:pre">启动逻辑</tspan></text></g><g transform="matrix(1,0,0,1,107.4,290.1)" ed:width="75.8" ed:height="41.8" id="104" ed:parentid="101"><path stroke-width="2" fill="#f9f9f9" d="M4,0L71.8,0C74.5,0,75.8,1.3,75.8,4L75.8,37.8C75.8,40.5,74.5,41.8,71.8,41.8L4,41.8C1.3,41.8,0,40.5,0,37.8L0,4C0,1.3,1.3,0,4,0z" stroke="#454545" stroke-linejoin="round"/><text class="st2"><tspan textLength="38" y="27.55" x="18" style="white-space:pre">框架</tspan></text></g><g transform="matrix(1,0,0,1,107.4,1312.45)" ed:width="75.8" ed:height="41.8" id="106" ed:parentid="101"><path stroke-width="2" fill="#f9f9f9" d="M4,0L71.8,0C74.5,0,75.8,1.3,75.8,4L75.8,37.8C75.8,40.5,74.5,41.8,71.8,41.8L4,41.8C1.3,41.8,0,40.5,0,37.8L0,4C0,1.3,1.3,0,4,0z" stroke="#454545" stroke-linejoin="round"/><text class="st2"><tspan textLength="38" y="27.55" x="18" style="white-space:pre">概念</tspan></text></g><g transform="matrix(1,0,0,1,161.3,199.55)" ed:width="282" ed:height="23.9" id="108" ed:parentid="102"><path fill="none" d="M0,23.9L282,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="249" y="16.1" x="8" style="white-space:pre">main: cmd/kube-scheduler/scheduler.go</tspan></text></g><g transform="matrix(1,0,0,1,161.3,233.2)" ed:width="311.6" ed:height="23.9" id="110" ed:parentid="102"><path fill="none" d="M0,23.9L311.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="277" y="16.1" x="8" style="white-space:pre">sched.Run(): pkg/scheduler/scheduler.go:276</tspan></text></g><g transform="matrix(1,0,0,1,161.3,341.65)" ed:width="315.6" ed:height="42.3" id="112" ed:parentid="104" ed:layout="rightmap"><path fill="none" d="M0,42.3L315.6,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="282" y="16.1" x="8" style="white-space:pre">顺序执行：前一个pod调度完执行下一个pod调度</tspan><tspan textLength="235" y="34.5" x="8" style="white-space:pre">每隔n时间调用sched.scheduleOne一次 </tspan></text></g><g transform="matrix(1,0,0,1,161.3,393.7)" ed:width="103.6" ed:height="23.9" id="121" ed:parentid="104"><path fill="none" d="M0,23.9L103.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="80" y="16.1" x="8" style="white-space:pre">scheduleOne</tspan></text></g><g transform="matrix(1,0,0,1,215.2,427.35)" ed:width="168.4" ed:height="23.9" id="123" ed:parentid="121"><path fill="none" d="M0,23.9L168.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="143" y="16.1" x="8" style="white-space:pre">1. 获取一个待调度的pod</tspan></text></g><g transform="matrix(1,0,0,1,215.2,830.6)" ed:width="220.4" ed:height="23.9" id="125" ed:parentid="121" ed:layout="rightmap"><path fill="none" d="M0,23.9L220.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="191" y="16.1" x="8" style="white-space:pre">2. schedule算法计算合适的node</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1188.25)" ed:width="284.4" ed:height="23.9" id="127" ed:parentid="121"><path fill="none" d="M0,23.9L284.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="254" y="16.1" x="8" style="white-space:pre">3. 若没有合适的node，则进入抢占调度逻辑</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1221.9)" ed:width="202" ed:height="23.9" id="129" ed:parentid="121"><path fill="none" d="M0,23.9L202,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="174" y="16.1" x="8" style="white-space:pre">4. pod记录被调度到某个node</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1255.55)" ed:width="286.8" ed:height="23.9" id="131" ed:parentid="121"><path fill="none" d="M0,23.9L286.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="253" y="16.1" x="8" style="white-space:pre">5. 新起一个goroutine异步完成pod binding</tspan></text></g><g transform="matrix(1,0,0,1,462.6,830.6)" ed:width="143.6" ed:height="23.9" id="135" ed:parentid="125" ed:layout="rightmap"><path fill="none" d="M0,23.9L143.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="117" y="16.1" x="8" style="white-space:pre">ScheduleAlgorithm</tspan></text></g><g transform="matrix(1,0,0,1,633.2,506.6)" ed:width="87.59999999999999" ed:height="23.9" id="137" ed:parentid="135" ed:layout="rightmap"><path fill="none" d="M0,23.9L87.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="64" y="16.1" x="8" style="white-space:pre">Schedule()</tspan></text></g><g transform="matrix(1,0,0,1,633.2,841.4)" ed:width="82.8" ed:height="23.9" id="139" ed:parentid="135" ed:layout="rightmap"><path fill="none" d="M0,23.9L82.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="60" y="16.1" x="8" style="white-space:pre">Preempt()</tspan></text></g><g transform="matrix(1,0,0,1,633.2,1124.2)" ed:width="94.8" ed:height="23.9" id="141" ed:parentid="135" ed:layout="rightmap"><path fill="none" d="M0,23.9L94.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="71" y="16.1" x="8" style="white-space:pre">Predicates()</tspan></text></g><g transform="matrix(1,0,0,1,633.2,1154.6)" ed:width="96.40000000000001" ed:height="23.9" id="143" ed:parentid="135" ed:layout="rightmap"><path fill="none" d="M0,23.9L96.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="72" y="16.1" x="8" style="white-space:pre">Prioritizers()</tspan></text></g><g transform="matrix(1,0,0,1,747.8,461)" ed:width="341.2" ed:height="23.9" id="145" ed:parentid="137" ed:layout="rightmap"><path fill="none" d="M0,23.9L341.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="304" y="16.1" x="8" style="white-space:pre">1. “Computing predicates”：findNodesThatFit()</tspan></text></g><g transform="matrix(1,0,0,1,747.8,491.4)" ed:width="254.8" ed:height="23.9" id="147" ed:parentid="137" ed:layout="rightmap"><path fill="none" d="M0,23.9L254.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="220" y="16.1" x="8" style="white-space:pre">2. “Prioritizing”：PrioritizeNodes()</tspan></text></g><g transform="matrix(1,0,0,1,747.8,521.8)" ed:width="245.2" ed:height="23.9" id="149" ed:parentid="137" ed:layout="rightmap"><path fill="none" d="M0,23.9L245.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="213" y="16.1" x="8" style="white-space:pre">3. “Selecting host”：selectHost()</tspan></text></g><g transform="matrix(1,0,0,1,1020,521.8)" ed:width="246" ed:height="23.9" id="151" ed:parentid="149" ed:layout="rightmap"><path fill="none" d="M0,23.9L246,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="216" y="16.1" x="8" style="white-space:pre">从priorityList中选择最高score的host</tspan></text></g><g transform="matrix(1,0,0,1,1116,461)" ed:width="228.4" ed:height="23.9" id="153" ed:parentid="145" ed:layout="rightmap"><path fill="none" d="M0,23.9L228.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="200" y="16.1" x="8" style="white-space:pre">预选过程，排除不符合条件的node</tspan></text></g><g transform="matrix(1,0,0,1,1029.6,491.4)" ed:width="257.2" ed:height="23.9" id="155" ed:parentid="147" ed:layout="rightmap"><path fill="none" d="M0,23.9L257.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="226" y="16.1" x="8" style="white-space:pre">算法为每个node打分，返回priorityList</tspan></text></g><g transform="matrix(1,0,0,1,747.8,552.2)" ed:width="394" ed:height="23.9" id="157" ed:parentid="137" ed:layout="rightmap"><path fill="none" d="M0,23.9L394,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="358" y="16.1" x="8" style="white-space:pre">新版本此处的处理流程已框架化，用户可自定义scheduler插件</tspan></text></g><g transform="matrix(1,0,0,1,743,729)" ed:width="317.2" ed:height="23.9" id="159" ed:parentid="139" ed:layout="rightmap"><path fill="none" d="M0,23.9L317.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="284" y="16.1" x="8" style="white-space:pre">1. 计算潜在的执行抢占驱逐后能跑该pod的nodes</tspan></text></g><g transform="matrix(1,0,0,1,1087.2,729)" ed:width="246.8" ed:height="23.9" id="161" ed:parentid="159" ed:layout="rightmap"><path fill="none" d="M0,23.9L246.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="213" y="16.1" x="8" style="white-space:pre">nodesWherePreemptionMightHelp</tspan></text></g><g transform="matrix(1,0,0,1,743,812.6)" ed:width="303.6" ed:height="23.9" id="163" ed:parentid="139" ed:layout="rightmap"><path fill="none" d="M0,23.9L303.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="271" y="16.1" x="8" style="white-space:pre">2. 计算潜在可行的node需要驱逐的pods有哪些</tspan></text></g><g transform="matrix(1,0,0,1,1073.6,812.6)" ed:width="196.4" ed:height="23.9" id="165" ed:parentid="163" ed:layout="rightmap"><path fill="none" d="M0,23.9L196.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="166" y="16.1" x="8" style="white-space:pre">selectNodesForPreemption</tspan></text></g><g transform="matrix(1,0,0,1,743,941.8)" ed:width="128.4" ed:height="23.9" id="167" ed:parentid="139" ed:layout="rightmap"><path fill="none" d="M0,23.9L128.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="106" y="16.1" x="8" style="white-space:pre">3. 拓展调度的逻辑</tspan></text></g><g transform="matrix(1,0,0,1,898.4,941.8)" ed:width="238" ed:height="23.9" id="169" ed:parentid="167" ed:layout="rightmap"><path fill="none" d="M0,23.9L238,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="207" y="16.1" x="8" style="white-space:pre">processPreemptionWithExtenders</tspan></text></g><g transform="matrix(1,0,0,1,743,1033)" ed:width="369.2" ed:height="23.9" id="171" ed:parentid="139" ed:layout="rightmap"><path fill="none" d="M0,23.9L369.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="332" y="16.1" x="8" style="white-space:pre">4. 从所有被筛选出的nodes中选择一个node用于schedule</tspan></text></g><g transform="matrix(1,0,0,1,743,649.8)" ed:width="236.4" ed:height="23.9" id="173" ed:parentid="139" ed:layout="rightmap"><path fill="none" d="M0,23.9L236.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="208" y="16.1" x="8" style="white-space:pre">0. 判断该pod执行驱逐操作是否合适</tspan></text></g><g transform="matrix(1,0,0,1,1006.4,649.8)" ed:width="208.4" ed:height="23.9" id="175" ed:parentid="173" ed:layout="rightmap"><path fill="none" d="M0,23.9L208.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="175" y="16.1" x="8" style="white-space:pre">podEligibleToPreemptOthers</tspan></text></g><g transform="matrix(1,0,0,1,1241.8,582.6)" ed:width="514" ed:height="42.3" id="177" ed:parentid="175" ed:layout="rightmap"><path fill="none" d="M0,42.3L514,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="449" y="16.1" x="8" style="white-space:pre">1. 如果该pod已经抢占过其他pods且被驱逐的pods还在graceful termination </tspan><tspan textLength="39" y="34.5" x="8" style="white-space:pre">period</tspan></text></g><g transform="matrix(1,0,0,1,1241.8,631.4)" ed:width="514" ed:height="42.3" id="179" ed:parentid="175" ed:layout="rightmap"><path fill="none" d="M0,42.3L514,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="462" y="16.1" x="8" style="white-space:pre">2. 如果有一个node已经被这个pod 提名，且这个node上有处于terminating状态</tspan><tspan textLength="43" y="34.5" x="8" style="white-space:pre">的pods</tspan></text></g><g transform="matrix(1,0,0,1,161.3,1364)" ed:width="57.2" ed:height="23.9" id="181" ed:parentid="106"><path fill="none" d="M0,23.9L57.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="38" y="16.1" x="8" style="white-space:pre">Cache</tspan></text></g><g transform="matrix(1,0,0,1,262.7,1431.3)" ed:width="386" ed:height="23.9" id="183" ed:parentid="185"><path fill="none" d="M0,23.9L386,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="350" y="16.1" x="8" style="white-space:pre">k8s的信息都存储在etcd中，唯一只能通过apiserver获取信息</tspan></text></g><g transform="matrix(1,0,0,1,208.8,1397.65)" ed:width="86" ed:height="23.9" id="185" ed:parentid="181"><path fill="none" d="M0,23.9L86,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="65" y="16.1" x="8" style="white-space:pre">为什么需要</tspan></text></g><g transform="matrix(1,0,0,1,262.7,1464.95)" ed:width="514" ed:height="42.3" id="187" ed:parentid="185"><path fill="none" d="M0,42.3L514,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="458" y="16.1" x="8" style="white-space:pre">虽然client-go已经提供了cache能力，但只缓存了pod和node信息，我们需要另</tspan><tspan textLength="91" y="34.5" x="8" style="white-space:pre">外缓存调度结果</tspan></text></g><g transform="matrix(1,0,0,1,161.3,1517)" ed:width="80.40000000000001" ed:height="23.9" id="189" ed:parentid="106"><path fill="none" d="M0,23.9L80.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="59" y="16.1" x="8" style="white-space:pre">NodeInfo</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1550.65)" ed:width="136.4" ed:height="23.9" id="191" ed:parentid="189"><path fill="none" d="M0,23.9L136.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="112" y="16.1" x="8" style="white-space:pre">Node层的汇聚信息</tspan></text></g><g transform="matrix(1,0,0,1,161.3,1584.3)" ed:width="80.40000000000001" ed:height="23.9" id="194" ed:parentid="106"><path fill="none" d="M0,23.9L80.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="57" y="16.1" x="8" style="white-space:pre">nodeTree</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1617.95)" ed:width="249.2" ed:height="23.9" id="196" ed:parentid="194"><path fill="none" d="M0,23.9L249.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="219" y="16.1" x="8" style="white-space:pre">按照区域zone将Node组织成树状结构</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1651.6)" ed:width="370.8" ed:height="23.9" id="198" ed:parentid="194"><path fill="none" d="M0,23.9L370.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="336" y="16.1" x="8" style="white-space:pre">比如需要多个pod副本部署在同一个区域亦或是不同的区域</tspan></text></g><g transform="matrix(1,0,0,1,161.3,1685.25)" ed:width="76.40000000000001" ed:height="23.9" id="200" ed:parentid="106"><path fill="none" d="M0,23.9L76.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="56" y="16.1" x="8" style="white-space:pre">snapshot</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1718.9)" ed:width="410.8" ed:height="23.9" id="202" ed:parentid="200"><path fill="none" d="M0,23.9L410.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="376" y="16.1" x="8" style="white-space:pre">是Cache某一时刻的复刻，可以理解为只读，访问快照不需要加锁</tspan></text></g><g transform="matrix(1,0,0,1,215.2,1752.55)" ed:width="421.2" ed:height="23.9" id="204" ed:parentid="200"><path fill="none" d="M0,23.9L421.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="386" y="16.1" x="8" style="white-space:pre">与Cache一起实现了读写分离，防止大范围的锁造成cache性能下降</tspan></text></g><g transform="matrix(1,0,0,1,1241.8,698.6)" ed:width="171.6" ed:height="23.9" id="206" ed:parentid="175" ed:layout="rightmap"><path fill="none" d="M0,23.9L171.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="144" y="16.1" x="8" style="white-space:pre">NominatedNodeName </tspan></text></g><g transform="matrix(1,0,0,1,1440.4,680.2)" ed:width="514" ed:height="42.3" id="208" ed:parentid="206" ed:layout="rightmap"><path fill="none" d="M0,42.3L514,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="467" y="16.1" x="8" style="white-space:pre">当pod被设置为抢占某个Node上的其他pod时，此时会设置该字段为该Node的名</tspan><tspan textLength="433" y="34.5" x="8" style="white-space:pre">字。调度器不会立刻将pod调度到Node上，而是等待被抢占的pod优雅退出</tspan></text></g><g transform="matrix(1,0,0,1,1361,729)" ed:width="500.4" ed:height="23.9" id="210" ed:parentid="161" ed:layout="rightmap"><path fill="none" d="M0,23.9L500.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="458" y="16.1" x="8" style="white-space:pre">之前predicate阶段失败，但是失败原因在特定列表内因此可能抢占成功的nodes</tspan></text></g><g transform="matrix(1,0,0,1,1297,759.4)" ed:width="45.2" ed:height="23.9" id="212" ed:parentid="165" ed:layout="rightmap"><path fill="none" d="M0,23.9L45.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="26" y="16.1" x="8" style="white-space:pre">约束</tspan></text></g><g transform="matrix(1,0,0,1,1369.2,759.4)" ed:width="315.6" ed:height="23.9" id="214" ed:parentid="212" ed:layout="rightmap"><path fill="none" d="M0,23.9L315.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="282" y="16.1" x="8" style="white-space:pre">能够删除低优先级的pod绝不删除高优先级的pod</tspan></text></g><g transform="matrix(1,0,0,1,1297,789.8)" ed:width="468.4" ed:height="23.9" id="216" ed:parentid="165" ed:layout="rightmap"><path fill="none" d="M0,23.9L468.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="426" y="16.1" x="8" style="white-space:pre">0. 找出Node中优先级比该pod低的pods，全部删除后看是否能fit该新pod</tspan></text></g><g transform="matrix(1,0,0,1,1297,847.4)" ed:width="514" ed:height="42.3" id="218" ed:parentid="165" ed:layout="rightmap"><path fill="none" d="M0,42.3L514,42.3" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="468" y="16.1" x="8" style="white-space:pre">1. 若上一步可以fit，由于上一步是删除所有低优先级的pod，因此需要释放被驱逐</tspan><tspan textLength="186" y="34.5" x="8" style="white-space:pre">的pods，能尽量少驱逐就少驱逐</tspan></text></g><g transform="matrix(1,0,0,1,1792.4,789.8)" ed:width="154" ed:height="23.9" id="220" ed:parentid="216" ed:layout="rightmap"><path fill="none" d="M0,23.9L154,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="130" y="16.1" x="8" style="white-space:pre">如果不能fit，抢占失败</tspan></text></g><g transform="matrix(1,0,0,1,1838,820.2)" ed:width="128.4" ed:height="23.9" id="222" ed:parentid="218" ed:layout="rightmap"><path fill="none" d="M0,23.9L128.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="106" y="16.1" x="8" style="white-space:pre">0. 根据优先级排序</tspan></text></g><g transform="matrix(1,0,0,1,1838,850.6)" ed:width="262.8" ed:height="23.9" id="224" ed:parentid="218" ed:layout="rightmap"><path fill="none" d="M0,23.9L262.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="232" y="16.1" x="8" style="white-space:pre">1. 分为两组：影响pdb的和不影响pdb的</tspan></text></g><g transform="matrix(1,0,0,1,1838,881)" ed:width="276.4" ed:height="23.9" id="226" ed:parentid="218" ed:layout="rightmap"><path fill="none" d="M0,23.9L276.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="245" y="16.1" x="8" style="white-space:pre">2. 先释放影响pdb的，再释放不影响pdb的</tspan></text></g><g transform="matrix(1,0,0,1,1838,911.4)" ed:width="445.2" ed:height="23.9" id="228" ed:parentid="218" ed:layout="rightmap"><path fill="none" d="M0,23.9L445.2,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="405" y="16.1" x="8" style="white-space:pre">3. 一旦释放某个pod后导致抢占pod不fit了，则找到了最少的pods集合</tspan></text></g><g transform="matrix(1,0,0,1,1139.2,972.2)" ed:width="266.8" ed:height="23.9" id="230" ed:parentid="171" ed:layout="rightmap"><path fill="none" d="M0,23.9L266.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="234" y="16.1" x="8" style="white-space:pre">0. 循环找PDBViolatingPods最少的node</tspan></text></g><g transform="matrix(1,0,0,1,1139.2,1002.6)" ed:width="291.6" ed:height="23.9" id="232" ed:parentid="171" ed:layout="rightmap"><path fill="none" d="M0,23.9L291.6,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="258" y="16.1" x="8" style="white-space:pre">1. 循环找highest priority victim最少的node</tspan></text></g><g transform="matrix(1,0,0,1,1139.2,1033)" ed:width="242.8" ed:height="23.9" id="234" ed:parentid="171" ed:layout="rightmap"><path fill="none" d="M0,23.9L242.8,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="213" y="16.1" x="8" style="white-space:pre">2. 循环找pod优先级总和最低的node</tspan></text></g><g transform="matrix(1,0,0,1,1139.2,1063.4)" ed:width="168.4" ed:height="23.9" id="236" ed:parentid="171" ed:layout="rightmap"><path fill="none" d="M0,23.9L168.4,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="143" y="16.1" x="8" style="white-space:pre">3. 循环找pod总数最低的</tspan></text></g><g transform="matrix(1,0,0,1,1139.2,1093.8)" ed:width="514" ed:height="23.9" id="238" ed:parentid="171" ed:layout="rightmap"><path fill="none" d="M0,23.9L514,23.9" stroke="#454545" stroke-linejoin="round"/><text class="st3"><tspan textLength="473" y="16.1" x="8" style="white-space:pre">上述只要区分出一个node的话就返回，否则到最后放弃区分，直接返回第一个结果</tspan></text></g></svg>